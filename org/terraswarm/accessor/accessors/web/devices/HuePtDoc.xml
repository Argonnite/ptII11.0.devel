<property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
    <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Edward A. Lee, Marcus Pan">
    </property>
    <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&lt;p&gt;This accessor controls a Philips Hue lightbulb.&#10; &lt;p&gt;&#10; It sets the parameters of the specified&#10; light according to the input values.&#10; &lt;/p&gt;&lt;p&gt;&#10; Logging on: This script attempts to access the bridge as a user with&#10; name given by &lt;i&gt;userName&lt;/i&gt;, which defaults to &amp;quot;ptolemyuser&amp;quot;.&#10; If there is no such user on the bridge, the script registers such a user and requests&#10; (via an alert dialog) that the&#10; link button on the bridge be pushed to authorize registration of this user.&#10; The user is given 20s to do this before an exception is thrown&#10; &lt;/p&gt;&lt;p&gt;&#10; Verifying the light: The final initialization step is to get a list of accessible lights.&#10; If the input light is not accessible, this accessor warns but does not error.&#10; Sometimes Hue lights are transient (get unplugged, become temporarily disconnected)&#10; and may be valid in the future. Rather than terminating the model, we hope&#10; that the lights come back.&#10; &lt;/p&gt;&lt;p&gt;&#10; Discovery: Finding the IP address of the Hue Bridge is not necessarily easy.&#10; The bridge acquires its address via DHCP, so the address will typically change&#10; each time the bridge is rebooted. Moreover, the address will likely not be&#10; accessible except on the local network.  The bridge responds to UPnP packets&#10; (universal plug-and-play), so it is possible to use software such as&#10; &lt;a href=&quot;http://4thline.org/projects/cling/&quot;&gt;Cling&lt;/a&gt; to discover the bridge.&#10; Ideally, UPnP discover would be provided via an accessor. In this case, a&#10; swarmlet could be created that runs periodically on a local network and publishes&#10; the URL of any discovered bridges to a key-value store. Then the KeyValueStore&#10; accessor could be used to provide the &lt;i&gt;bridgeIPAdress&lt;/i&gt; input to this accessor.&#10; &lt;/p&gt;&lt;/p&gt;">
    </property>
    <property name="bridgeIPAddress (port)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;string&quot;]}) The bridge IP address (and port, if needed).">
    </property>
    <property name="lightID (port)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;int&quot;]}) The light identifier (an integer beginning with 1).">
    </property>
    <property name="brightness (port)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;number&quot;]}) The brightness (an integer between 0 and 255).">
    </property>
    <property name="hue (port)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;number&quot;]}) The hue (an integer between 0 and 62580).">
    </property>
    <property name="saturation (port)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;number&quot;]}) The saturation (an integer between 0 and 255).">
    </property>
    <property name="transitionTime (port)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;int&quot;]}) The transition time, in multiples of 100ms.">
    </property>
    <property name="trigger (port)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;int&quot;]}) Triggers a PUT request with all the light settings. Can be any type.">
    </property>
    <property name="on (port)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;boolean&quot;]}) Whether the light is on (true) or off (false).">
    </property>
    <property name="userName (parameter)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;string&quot;]}) The user name for logging on to the Hue Bridge.&#10;  This must be at least 11 characters, or the Hue regards it as invalid.">
    </property>
    <property name="version" class="ptolemy.kernel.util.StringAttribute" value="$$Id: Hue.js 322 2015-09-28 18:11:06Z bradjc@umich.edu $$">
    </property>
</property>