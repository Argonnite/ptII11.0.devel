<property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
    <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Hokeun Kim, Edward Lee">
    </property>
    <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&lt;p&gt;This accessor starts a server that listens for web socket&#10; connection requests on the specified hostInterface and port.  The&#10; hostInterface is needed only if the host machine has more than one&#10; network interface (e.g. Ethernet and WiFi) and &apos;localhost&apos; does&#10; not resolve to the desired interface.&lt;/p&gt;&#10;&lt;p&gt; The output &lt;code&gt;connection&lt;/code&gt; reports the when a&#10; connection is opened or closed.&lt;/p&gt;&#10;&lt;p&gt; When a message arrives on a connection, a &lt;code&gt;received&lt;/code&gt;&#10; output is produced with that message. The maxFrameSize parameter limits the size&#10; of received messages, and any attempt to send to this client a larger message&#10; will cause an error.&lt;/p&gt;&#10;&lt;p&gt; When an input arrives on &lt;code&gt;toSend&lt;/code&gt;, then a message is&#10; sent to one or all of the open socket connections.&lt;/p&gt;&#10;&lt;p&gt; When &lt;code&gt;wrapup()&lt;/code&gt; is invoked, this accessor closes the&#10; server and all connections.&lt;/p&gt;&#10;&lt;p&gt; The default type for both sending and receiving&#10; is &apos;application/json&apos;, which allows sending and receiving anything that has&#10; a string representation in JSON. The types supported by this implementation&#10; include at least:&lt;/p&gt;&#10;&lt;ul&gt;&#10;&lt;li&gt;&lt;strong&gt;application/json&lt;/strong&gt;: The send() function uses JSON.stringify() and sends the&#10;result with a UTF-8 encoding. An incoming byte stream will be parsed as JSON,&#10;and if the parsing fails, will be provided as a string interpretation of the byte&#10;stream.&lt;/li&gt;&#10;&lt;li&gt;&lt;strong&gt;text/*&lt;/strong&gt;: Any text type is sent as a string encoded in UTF-8.&lt;/li&gt;&#10;&lt;li&gt;&lt;p&gt;&lt;strong&gt;image/x&lt;/strong&gt;: Where &lt;strong&gt;x&lt;/strong&gt; is one of &lt;strong&gt;json&lt;/strong&gt;, &lt;strong&gt;png&lt;/strong&gt;, &lt;strong&gt;gif&lt;/strong&gt;,&#10;and more.&#10;In this case, the data passed to send() is assumed to be an image, as encoded&#10;on the host, and the image will be encoded as a byte stream in the specified&#10;format before sending.  A received byte stream will be decoded as an image,&#10;if possible.&lt;/p&gt;&#10;&lt;p&gt;This accessor requires the module webSocket.&lt;/p&gt;&#10;&lt;/li&gt;&#10;&lt;/ul&gt;">
    </property>
    <property name="toSend (port)" class="ptolemy.kernel.util.StringAttribute" value="undefined The data to be sent to open sockets. If this is an object with &apos;socketID&apos; field and a &apos;message&apos; field, then send the value of the message field to the socket identified by the socketID field. If the input has any other form, then the message is broadcast to all open socket connections.">
    </property>
    <property name="connection (port)" class="ptolemy.kernel.util.StringAttribute" value="undefined An output produced when a connection opens or closes. The output is an object with two fields, a &apos;socketID&apos;, which is a unique ID for this client connection, and a &apos;status&apos; field, which is the string &apos;open&apos; or &apos;closed&apos;.">
    </property>
    <property name="received (port)" class="ptolemy.kernel.util.StringAttribute" value="undefined A message received a client in the form of an object with two fields, a &apos;socketID&apos;, which is a unique ID for this client connection, and a &apos;message&apos; field, which is the message received from the client.">
    </property>
    <property name="hostInterface (parameter)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;string&quot;]}) The IP address or domain name of the&#10;   network interface to listen to.">
    </property>
    <property name="port (parameter)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;int&quot;]}) The port to listen to for connections.">
    </property>
    <property name="receiveType (parameter)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;string&quot;]}) The MIME type for incoming messages, which defaults to &apos;application/json&apos;.">
    </property>
    <property name="sendType (parameter)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;string&quot;]}) The MIME type for outgoing messages, which defaults to &apos;application/json&apos;.">
    </property>
    <property name="maxFrameSize (parameter)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;int&quot;]}) The maximum frame size for a received message (default is 65536).">
    </property>
    <property name="version" class="ptolemy.kernel.util.StringAttribute" value="$$Id: WebSocketServer.js 323 2015-09-28 18:19:09Z bradjc@umich.edu $$">
    </property>
</property>